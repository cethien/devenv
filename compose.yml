services:
  semaphore:
    image: semaphoreui/semaphore:latest
    container_name: semaphore
    restart: unless-stopped
    environment:
      SEMAPHORE_DB_DIALECT: bolt
    env_file:
      - .env
    networks:
      - web
      - homepage
    labels:
      com.centurylinklabs.watchtower.enable: true

      caddy: semaphore.dev.localhost
      caddy.reverse_proxy: '{{upstreams 3000}}'

      homepage.group: Automation
      homepage.name: Semaphore
      homepage.icon: semaphore.png
      homepage.href: https://semaphore.dev.localhost
      homepage.description: Automation

  mailpit:
    image: axllent/mailpit:latest
    container_name: mailpit
    restart: unless-stopped
    environment:
      TZ: Europe/London
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    ports:
      - '127.0.0.1:1025:1015'
    volumes:
      - mailpit-data:/data
    networks:
      - web
      - homepage
    labels:
      com.centurylinklabs.watchtower.enable: true

      caddy: smtp.dev.localhost
      caddy.reverse_proxy: '{{upstreams 8025}}'

      homepage.group: Testing
      homepage.name: Mailpit
      homepage.icon: mdi-email
      homepage.href: https://smtp.dev.localhost
      homepage.description: SMTP Testing tool

  pgadmin:
    image: elestio/pgadmin:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_LISTEN_PORT: 8080
    env_file:
      - .env
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - postgres
      - web
      - homepage
    labels:
      com.centurylinklabs.watchtower.enable: true

      caddy: pgadmin.dev.localhost
      caddy.reverse_proxy: '{{upstreams 8080}}'

      homepage.group: Database
      homepage.name: pgAdmin
      homepage.icon: pgadmin.png
      homepage.href: https://pgadmin.dev.localhost
      homepage.description: Postgres DB Admin

  postgres:
    image: postgres:16
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
    env_file:
      - .env
    ports:
      - '127.0.0.1:5432:5432'
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - postgres
      - homepage
    labels:
      com.centurylinklabs.watchtower.enable: true

      homepage.group: Database
      homepage.name: postgres
      homepage.icon: postgres.png
      homepage.href: postgres://localhost:5432?ssl=disabled
      homepage.description: Postgres DB

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: homepage
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./homepage/config:/app/config
    networks:
      - homepage
      - web
    labels:
      com.centurylinklabs.watchtower.enable: true

      caddy: dev.localhost
      caddy.reverse_proxy: '{{upstreams 3000}}'

  caddy:
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    container_name: caddy-reverse-proxy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - caddy-data:/data
    environment:
      CADDY_INGRESS_NETWORKS: devenv_web
    ports:
      - '127.0.0.1:80:80'
      - '127.0.0.1:443:443'
    networks:
      - web
    labels:
      com.centurylinklabs.watchtower.enable: true

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    restart: always
    command:
      - --interval=30
      - --label-enable
      - --cleanup
      - --rolling-restart
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      com.centurylinklabs.watchtower.enable: true

volumes:
  caddy-data:
    name: caddy_data
  postgres-data:
    name: postgres_data
  pgadmin-data:
    name: pgadmin_data
  mailpit-data:
    name: mailpit_data

networks:
  web:
    name: devenv_web
  homepage:
  postgres:
